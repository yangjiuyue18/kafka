#version: "3.9"

services:
  zookeeper: 
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=LISTENER_DOCKER://:29092,LISTENER_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=LISTENER_DOCKER://kafka:29092,LISTENER_HOST://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_DOCKER:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LISTENER_DOCKER
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: Sandbox Kafka Cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092            
      DYNAMIC_CONFIG_ENABLED: 'true'
    ports:
      - 8787:8080   
    depends_on:
      - kafka

  ksql:
      image: confluentinc/ksqldb-server:latest
      hostname: ksqldb-server
      container_name: ksqldb-server
      depends_on:
        - kafka
      ports:
        - 8788:8088
      environment:
        KSQL_LISTENERS: "http://0.0.0.0:8088"
        KSQL_BOOTSTRAP_SERVERS: kafka:29092

#  weather-producer:
#    container_name: weather-producer
#    build:
#      context: ../code/kafka/
#      dockerfile: docker-compose.yml.fastapi.weather
#    depends_on:
#      - kafka
#
#  faust-streaming:
#    container_name: faust-streaming
#    build:
#      context: ../code/
#      dockerfile: docker-compose.yml.fastapi.faust
#    depends_on:
#      - kafka